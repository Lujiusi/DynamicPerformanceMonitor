{
  "aggregatorFun": [
    {
      "aggregatorFunctionType": "computebystep",                          --前聚合计算方式，例如：sum/count/avg等，当前使用的是计算两步时间差方式
      "aliasName": "popRequestTime_homeExposureTime",           --计算结果别名
      "computeColumn": "timestamp",                                                --需要进行计算的字段
      "defaultValue": "-1",                                                                      --默认值
      "delay": 15,                                                                                    --数据延时
      "endStep": "popRequestTime",                                                   --消息结束tag
      "filters": {},                                                                                     --过滤规则
      "groupingKeyNames": [],                                                            --内部分组字段
      "operator": "-",                                                                             --针对两步计算的方式
      "rating": 1,                                                                                    --计算频率
      "startStep": "homeExposureTime",                                          --消息开始tag
      "stepColumn": "trace.spanId",                                                  --消息开始结束取自于哪个字段
      "typeName": "聚合计算",
      "window": 1                                                                                 --时间窗口大小
    },
    {
      "aggregatorFunctionType": "computebystep",
      "aliasName": "popExposureTime_homeExposureTime",
      "computeColumn": "timestamp",
      "defaultValue": "-1",
      "delay": 15,
      "endStep": "popExposureTime",
      "filters": {},
      "groupingKeyNames": [],
      "operator": "-",
      "rating": 1,
      "startStep": "homeExposureTime",
      "stepColumn": "trace.spanId",
      "typeName": "聚合计算",
      "window": 1
    },
    {
      "aggregatorFunctionType": "count",
      "aliasName": "popExposureTime-homeExposureTime",
      "computeColumn": "popExposureTime-homeExposureTime",
      "delay": 15,
      "distinctColumns": [],
      "filters": {
        "type": "selector",
        "value": "1,2,3",
        "key": "homeExposureTime",
        "operator": "not in"
      },
      "groupingKeyNames": [],
      "rating": 1,
      "typeName": "聚合计算",
      "window": 1
    },
    {
      "aggregatorFunctionType": "count",
      "aliasName": "popRequestTime-homeExposureTime",
      "computeColumn": "popRequestTime-homeExposureTime",
      "delay": 15,
      "distinctColumns": [],
      "filters": {},
      "groupingKeyNames": [],
      "rating": 1,
      "typeName": "聚合计算",
      "window": 1
    },
    {
      "aggregatorFunctionType": "count",
      "aliasName": "请求总量",
      "computeColumn": "eventId",
      "delay": 15,
      "distinctColumns": [],
      "filters": {
        "type": "selector",
        "value": "homeExposureTime",
        "key": "trace.spanId",
        "operator": "="
      },
      "groupingKeyNames": [],
      "rating": 1,
      "typeName": "聚合计算",
      "window": 1
    }
  ],
  "alarmRule": [],
  "filters": {
    "type": "selector",                                                                                     --type分为3种值,and or selector
    "value": "home_pop",
    "key": "eventName",
    "operator": "="
  },
  "postaggregatorFun": [
    {
      "aliasName": "弹框的曝光慢加载占比",                                               --别名
      "fields": [
        {
          "feildName": "popExposureTime-homeExposureTime",        --该值取自于前聚合的别名
          "filters": {                                                                                     --筛选大于500的请求
            "type": "selector",
            "value": "500",
            "key": "popExposureTime-homeExposureTime",
            "operator": ">"
          },
          "postAgg": "count"                                                                  --求其数量
        },
        {
          "feildName": "请求总量",                                                          --取自于前聚合的别名
          "filters": {},
          "postAgg": "count"                                                                  --求其数量
        }
      ],
      "operator": "/"                                                                                  --针对于上面两个结果求除法操作，目前支持加减乘除
    },
    {
      "aliasName": "弹框的请求慢加载占比",
      "fields": [
        {
          "feildName": "popRequestTime-homeExposureTime",
          "filters": {
            "type": "selector",
            "value": "500",
            "key": "popRequestTime-homeExposureTime",
            "operator": ">"
          },
          "postAgg": "count"
        },
        {
          "feildName": "请求总量",
          "filters": {},
          "postAgg": "count"
        }
      ],
      "operator": "/"
    }
  ],
  "ruleID": 2,
  "ruleState": "active",
  "transForm": [],
  "uniqueKey": [
    "trace.traceId"
  ]
}